{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\n\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\n\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst myButtonEl = document.querySelector('button');\nconst timerEl = document.querySelector('.timer');\nconst daysSpan = timerEl.querySelector('.value[data-days]');\nconst hoursSpan = timerEl.querySelector('.value[data-hours]');\nconst minutesSpan = timerEl.querySelector('.value[data-minutes]');\nconst secondsSpan = timerEl.querySelector('.value[data-seconds]');\n\nlet userSelectedDate;\nlet countdownInterval;\n\nmyButtonEl.addEventListener('click', () => {\n  userSelectedDate = new Date(instance.selectedDates[0]);\n\n  const updateCountdown = () => {\n    const now = new Date();\n    const remainingTime = userSelectedDate - now;\n    if (remainingTime <= 0) {\n      clearInterval(countdownInterval);\n      onTick(0);\n      updateButtonState();\n    } else {\n      onTick(remainingTime);\n    }\n  };\n  updateCountdown();\n  countdownInterval = setInterval(updateCountdown, 1000);\n});\n\nfunction onTick(remainingTime) {\n  const { days, hours, minutes, seconds } = convertMs(remainingTime);\n  daysSpan.textContent = days;\n  hoursSpan.textContent = hours;\n  minutesSpan.textContent = minutes;\n  secondsSpan.textContent = seconds;\n}\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  dateFormat: 'Y-m-d H:i',\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    updateButtonState();\n    console.log(selectedDates[0]);\n  },\n};\n\nfunction updateButtonState() {\n  if (userSelectedDate < new Date()) {\n    iziToast.error({\n      position: 'topRight',\n      message: 'Please choose a date in the future',\n    });\n    myButtonEl.disabled = true;\n    myButtonEl.style.color = '#989898';\n    myButtonEl.style.background = '#cfcfcf';\n    myButtonEl.style.pointerEvents = 'none';\n  } else {\n    myButtonEl.disabled = false;\n    myButtonEl.style.color = '';\n    myButtonEl.style.background = '';\n    myButtonEl.style.pointerEvents = '';\n  }\n}\nconst instance = flatpickr('#datetime-picker', options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day)\n    .toString()\n    .padStart(2, '0');\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour)\n    .toString()\n    .padStart(2, '0');\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute)\n    .toString()\n    .padStart(2, '0');\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second)\n    .toString()\n    .padStart(2, '0');\n\n  return { days, hours, minutes, seconds };\n}\n\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n"],"names":["myButtonEl","timerEl","daysSpan","hoursSpan","minutesSpan","secondsSpan","userSelectedDate","countdownInterval","instance","updateCountdown","remainingTime","onTick","updateButtonState","days","hours","minutes","seconds","convertMs","options","selectedDates","iziToast","flatpickr","ms"],"mappings":"sGAQA,MAAMA,EAAa,SAAS,cAAc,QAAQ,EAC5CC,EAAU,SAAS,cAAc,QAAQ,EACzCC,EAAWD,EAAQ,cAAc,mBAAmB,EACpDE,EAAYF,EAAQ,cAAc,oBAAoB,EACtDG,EAAcH,EAAQ,cAAc,sBAAsB,EAC1DI,EAAcJ,EAAQ,cAAc,sBAAsB,EAEhE,IAAIK,EACAC,EAEJP,EAAW,iBAAiB,QAAS,IAAM,CACzCM,EAAmB,IAAI,KAAKE,EAAS,cAAc,CAAC,CAAC,EAErD,MAAMC,EAAkB,IAAM,CAE5B,MAAMC,EAAgBJ,EADV,IAAI,KAEZI,GAAiB,GACnB,cAAcH,CAAiB,EAC/BI,EAAO,CAAC,EACRC,KAEAD,EAAOD,CAAa,CAE1B,EACED,IACAF,EAAoB,YAAYE,EAAiB,GAAI,CACvD,CAAC,EAED,SAASE,EAAOD,EAAe,CAC7B,KAAM,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUP,CAAa,EACjER,EAAS,YAAcW,EACvBV,EAAU,YAAcW,EACxBV,EAAY,YAAcW,EAC1BV,EAAY,YAAcW,CAC5B,CAEA,MAAME,EAAU,CACd,WAAY,GACZ,UAAW,GACX,WAAY,YACZ,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBb,EAAmBa,EAAc,CAAC,EAClCP,IACA,QAAQ,IAAIO,EAAc,CAAC,CAAC,CAC7B,CACH,EAEA,SAASP,GAAoB,CACvBN,EAAmB,IAAI,MACzBc,EAAS,MAAM,CACb,SAAU,WACV,QAAS,oCACf,CAAK,EACDpB,EAAW,SAAW,GACtBA,EAAW,MAAM,MAAQ,UACzBA,EAAW,MAAM,WAAa,UAC9BA,EAAW,MAAM,cAAgB,SAEjCA,EAAW,SAAW,GACtBA,EAAW,MAAM,MAAQ,GACzBA,EAAW,MAAM,WAAa,GAC9BA,EAAW,MAAM,cAAgB,GAErC,CACA,MAAMQ,EAAWa,EAAU,mBAAoBH,CAAO,EAEtD,SAASD,EAAUK,EAAI,CAQrB,MAAMT,EAAO,KAAK,MAAMS,EAAK,KAAG,EAC7B,SAAU,EACV,SAAS,EAAG,GAAG,EAEZR,EAAQ,KAAK,MAAOQ,EAAK,MAAO,IAAI,EACvC,SAAU,EACV,SAAS,EAAG,GAAG,EAEZP,EAAU,KAAK,MAAQO,EAAK,MAAO,KAAQ,GAAM,EACpD,SAAU,EACV,SAAS,EAAG,GAAG,EAEZN,EAAU,KAAK,MAASM,EAAK,MAAO,KAAQ,IAAU,GAAM,EAC/D,SAAU,EACV,SAAS,EAAG,GAAG,EAElB,MAAO,CAAE,KAAAT,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,QAAQ,IAAIC,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC"}